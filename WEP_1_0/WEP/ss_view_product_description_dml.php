<?php

// Data functions for table ss_view_product_description

// This script and data application were generated by AppGini 5.30
// Download AppGini for free from http://bigprof.com/appgini/download/

function ss_view_product_description_insert(){
	global $Translation;

	if($_GET['insert_x']!=''){$_POST=$_GET;}

	// mm: can member insert record?
	$arrPerm=getTablePermissions('ss_view_product_description');
	if(!$arrPerm[1]){
		return false;
	}

	$data['title'] = makeSafe($_POST['title']);
		if($data['title'] == empty_lookup_value){ $data['title'] = ''; }
	$data['excerpt'] = br2nl(makeSafe($_POST['excerpt']));
	$data['post_status'] = makeSafe($_POST['post_status']);
		if($data['post_status'] == empty_lookup_value){ $data['post_status'] = ''; }
	if($data['post_id'] == '') {echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'post_id': " . $Translation['pkfield empty'] . '</div>'; exit;}

	if($data['post_id'] == '') $data['post_id'] = "0";
	if($data['post_status'] == '') $data['post_status'] = "publish";

	// hook: ss_view_product_description_before_insert
	if(function_exists('ss_view_product_description_before_insert')){
		$args=array();
		if(!ss_view_product_description_before_insert($data, getMemberInfo(), $args)){ return false; }
	}

	$o=array('silentErrors' => true);
	sql('insert into `ss_view_product_description` set       `title`=' . (($data['title'] !== '' && $data['title'] !== NULL) ? "'{$data['title']}'" : 'NULL') . ', `excerpt`=' . (($data['excerpt'] !== '' && $data['excerpt'] !== NULL) ? "'{$data['excerpt']}'" : 'NULL') . ', `post_status`=' . (($data['post_status'] !== '' && $data['post_status'] !== NULL) ? "'{$data['post_status']}'" : 'NULL'), $o);
	if($o['error']!=''){
		echo $o['error'];
		echo "<a href=\"ss_view_product_description_view.php?addNew_x=1\">{$Translation['< back']}</a>";
		exit;
	}

	$recID=$data['post_id'];

	// hook: ss_view_product_description_after_insert
	if(function_exists('ss_view_product_description_after_insert')){
		$res = sql("select * from `ss_view_product_description` where `post_id`='" . makeSafe($recID) . "' limit 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID);
		$args=array();
		if(!ss_view_product_description_after_insert($data, getMemberInfo(), $args)){ return (get_magic_quotes_gpc() ? stripslashes($recID) : $recID); }
	}

	// mm: save ownership data
	sql("insert into membership_userrecords set tableName='ss_view_product_description', pkValue='$recID', memberID='".getLoggedMemberID()."', dateAdded='".time()."', dateUpdated='".time()."', groupID='".getLoggedGroupID()."'", $eo);

	return (get_magic_quotes_gpc() ? stripslashes($recID) : $recID);
}

function ss_view_product_description_delete($selected_id, $AllowDeleteOfParents=false, $skipChecks=false){
	// insure referential integrity ...
	global $Translation;
	$selected_id=makeSafe($selected_id);

	// mm: can member delete record?
	$arrPerm=getTablePermissions('ss_view_product_description');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='ss_view_product_description' and pkValue='$selected_id'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='ss_view_product_description' and pkValue='$selected_id'");
	if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
		// delete allowed, so continue ...
	}else{
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: ss_view_product_description_before_delete
	if(function_exists('ss_view_product_description_before_delete')){
		$args=array();
		if(!ss_view_product_description_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'];
	}

	// child table: ss_view_product_featured
	$res = sql("select `post_id` from `ss_view_product_description` where `post_id`='$selected_id'", $eo);
	$post_id = db_fetch_row($res);
	$rires = sql("select count(1) from `ss_view_product_featured` where `post_id`='".addslashes($post_id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "ss_view_product_featured", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "ss_view_product_featured", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input tabindex=\"2\" type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='ss_view_product_description_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input tabindex=\"2\" type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='ss_view_product_description_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: ss_view_product_price
	$res = sql("select `post_id` from `ss_view_product_description` where `post_id`='$selected_id'", $eo);
	$post_id = db_fetch_row($res);
	$rires = sql("select count(1) from `ss_view_product_price` where `post_id`='".addslashes($post_id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "ss_view_product_price", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "ss_view_product_price", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input tabindex=\"2\" type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='ss_view_product_description_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input tabindex=\"2\" type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='ss_view_product_description_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: ss_view_product_regular_price
	$res = sql("select `post_id` from `ss_view_product_description` where `post_id`='$selected_id'", $eo);
	$post_id = db_fetch_row($res);
	$rires = sql("select count(1) from `ss_view_product_regular_price` where `post_id`='".addslashes($post_id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "ss_view_product_regular_price", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "ss_view_product_regular_price", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input tabindex=\"2\" type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='ss_view_product_description_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input tabindex=\"2\" type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='ss_view_product_description_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: ss_view_product_sale_price
	$res = sql("select `post_id` from `ss_view_product_description` where `post_id`='$selected_id'", $eo);
	$post_id = db_fetch_row($res);
	$rires = sql("select count(1) from `ss_view_product_sale_price` where `post_id`='".addslashes($post_id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "ss_view_product_sale_price", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "ss_view_product_sale_price", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input tabindex=\"2\" type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='ss_view_product_description_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input tabindex=\"2\" type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='ss_view_product_description_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: ss_view_product_sale_price_dates_from
	$res = sql("select `post_id` from `ss_view_product_description` where `post_id`='$selected_id'", $eo);
	$post_id = db_fetch_row($res);
	$rires = sql("select count(1) from `ss_view_product_sale_price_dates_from` where `post_id`='".addslashes($post_id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "ss_view_product_sale_price_dates_from", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "ss_view_product_sale_price_dates_from", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input tabindex=\"2\" type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='ss_view_product_description_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input tabindex=\"2\" type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='ss_view_product_description_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: ss_view_product_sale_price_dates_to
	$res = sql("select `post_id` from `ss_view_product_description` where `post_id`='$selected_id'", $eo);
	$post_id = db_fetch_row($res);
	$rires = sql("select count(1) from `ss_view_product_sale_price_dates_to` where `post_id`='".addslashes($post_id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "ss_view_product_sale_price_dates_to", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "ss_view_product_sale_price_dates_to", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input tabindex=\"2\" type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='ss_view_product_description_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input tabindex=\"2\" type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='ss_view_product_description_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: ss_view_product_sku
	$res = sql("select `post_id` from `ss_view_product_description` where `post_id`='$selected_id'", $eo);
	$post_id = db_fetch_row($res);
	$rires = sql("select count(1) from `ss_view_product_sku` where `post_id`='".addslashes($post_id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "ss_view_product_sku", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "ss_view_product_sku", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input tabindex=\"2\" type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='ss_view_product_description_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input tabindex=\"2\" type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='ss_view_product_description_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	sql("delete from `ss_view_product_description` where `post_id`='$selected_id'", $eo);

	// hook: ss_view_product_description_after_delete
	if(function_exists('ss_view_product_description_after_delete')){
		$args=array();
		ss_view_product_description_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("delete from membership_userrecords where tableName='ss_view_product_description' and pkValue='$selected_id'", $eo);
}

function ss_view_product_description_update($selected_id){
	global $Translation;

	if($_GET['update_x']!=''){$_POST=$_GET;}

	// mm: can member edit record?
	$arrPerm=getTablePermissions('ss_view_product_description');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='ss_view_product_description' and pkValue='".makeSafe($selected_id)."'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='ss_view_product_description' and pkValue='".makeSafe($selected_id)."'");
	if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){ // allow update?
		// update allowed, so continue ...
	}else{
		return false;
	}

	$data['title'] = makeSafe($_POST['title']);
		if($data['title'] == empty_lookup_value){ $data['title'] = ''; }
	$data['excerpt'] = br2nl(makeSafe($_POST['excerpt']));
	$data['post_status'] = makeSafe($_POST['post_status']);
		if($data['post_status'] == empty_lookup_value){ $data['post_status'] = ''; }
	$data['selectedID']=makeSafe($selected_id);

	// hook: ss_view_product_description_before_update
	if(function_exists('ss_view_product_description_before_update')){
		$args=array();
		if(!ss_view_product_description_before_update($data, getMemberInfo(), $args)){ return false; }
	}

	$o=array('silentErrors' => true);
	sql('update `ss_view_product_description` set       `title`=' . (($data['title'] !== '' && $data['title'] !== NULL) ? "'{$data['title']}'" : 'NULL') . ', `excerpt`=' . (($data['excerpt'] !== '' && $data['excerpt'] !== NULL) ? "'{$data['excerpt']}'" : 'NULL') . ', `post_status`=' . (($data['post_status'] !== '' && $data['post_status'] !== NULL) ? "'{$data['post_status']}'" : 'NULL') . " where `post_id`='".makeSafe($selected_id)."'", $o);
	if($o['error']!=''){
		echo $o['error'];
		echo '<a href="ss_view_product_description_view.php?SelectedID='.urlencode($selected_id)."\">{$Translation['< back']}</a>";
		exit;
	}

	$data['selectedID'] = $data['post_id'];

	// hook: ss_view_product_description_after_update
	if(function_exists('ss_view_product_description_after_update')){
		$res = sql("SELECT * FROM `ss_view_product_description` WHERE `post_id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = $data['post_id'];
		$args = array();
		if(!ss_view_product_description_after_update($data, getMemberInfo(), $args)){ return; }
	}

	// mm: update ownership data
	sql("update membership_userrecords set dateUpdated='".time()."', pkValue='{$data['post_id']}' where tableName='ss_view_product_description' and pkValue='".makeSafe($selected_id)."'", $eo);

}

function ss_view_product_description_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0){
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm=getTablePermissions('ss_view_product_description');
	if(!$arrPerm[1] && $selected_id==''){ return ''; }
	$AllowInsert = ($arrPerm[1] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != ''){
		$dvprint = true;
	}


	// populate filterers, starting from children to grand-parents

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: post_status
	$combo_post_status = new Combo;
	$combo_post_status->ListType = 0;
	$combo_post_status->MultipleSeparator = ', ';
	$combo_post_status->ListBoxHeight = 10;
	$combo_post_status->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/ss_view_product_description.post_status.csv')){
		$post_status_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/ss_view_product_description.post_status.csv')));
		$combo_post_status->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($post_status_data)));
		$combo_post_status->ListData = $combo_post_status->ListItem;
	}else{
		$combo_post_status->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("publish;;draft")));
		$combo_post_status->ListData = $combo_post_status->ListItem;
	}
	$combo_post_status->SelectName = 'post_status';

	if($selected_id){
		// mm: check member permissions
		if(!$arrPerm[2]){
			return "";
		}
		// mm: who is the owner?
		$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='ss_view_product_description' and pkValue='".makeSafe($selected_id)."'");
		$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='ss_view_product_description' and pkValue='".makeSafe($selected_id)."'");
		if($arrPerm[2]==1 && getLoggedMemberID()!=$ownerMemberID){
			return "";
		}
		if($arrPerm[2]==2 && getLoggedGroupID()!=$ownerGroupID){
			return "";
		}

		// can edit?
		if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){
			$AllowUpdate=1;
		}else{
			$AllowUpdate=0;
		}

		$res = sql("select * from `ss_view_product_description` where `post_id`='".makeSafe($selected_id)."'", $eo);
		$row = db_fetch_array($res);
		$urow = $row; /* unsanitized data */
		$hc = new CI_Input();
		$row = $hc->xss_clean($row); /* sanitize data */
		$combo_post_status->SelectedData = $row['post_status'];
	}else{
		$combo_post_status->SelectedText = ( $_REQUEST['FilterField'][1]=='4' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "publish");
	}
	$combo_post_status->Render();

	// code for template based detail view forms

	// open the detail view template
	$templateCode = @file_get_contents('./templates/ss_view_product_description_templateDV.html');

	// process form title
	$templateCode=str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Detail View', $templateCode);
	$templateCode=str_replace('<%%RND1%%>', $rnd1, $templateCode);
	// process buttons
	if($AllowInsert){
		if(!$selected_id) $templateCode=str_replace('<%%INSERT_BUTTON%%>', '<button tabindex="2" type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return ss_view_product_description_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode=str_replace('<%%INSERT_BUTTON%%>', '<button tabindex="2" type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return ss_view_product_description_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	}else{
		$templateCode=str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if($_REQUEST['Embedded']){
		$backAction = 'window.parent.jQuery(\'.modal\').modal(\'hide\'); return false;';
	}else{
		$backAction = '$$(\'form\')[0].writeAttribute(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id){
		if($AllowUpdate){
			$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '<button tabindex="2" type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return ss_view_product_description_validateData();"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		}else{
			$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
			$templateCode=str_replace('<%%DELETE_BUTTON%%>', '<button tabindex="2" type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		}else{
			$templateCode=str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode=str_replace('<%%DESELECT_BUTTON%%>', '<button tabindex="2" type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	}else{
		$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode=str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode=str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button tabindex="2" type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate && !$AllowInsert) || (!$selected_id && !$AllowInsert)){
		$jsReadOnly .= "\tjQuery('#title').replaceWith('<p class=\"form-control-static\" id=\"title\">' + (jQuery('#title').val() || '') + '</p>');\n";
		$jsReadOnly .= "\tjQuery('#excerpt').replaceWith('<p class=\"form-control-static\" id=\"excerpt\">' + (jQuery('#excerpt').val() || '') + '</p>');\n";
		$jsReadOnly .= "\tjQuery('#post_status').replaceWith('<p class=\"form-control-static\" id=\"post_status\">' + (jQuery('#post_status').val() || '') + '</p>'); jQuery('#post_status-multi-selection-help').hide();\n";

		$noUploads = true;
	}elseif($AllowInsert){
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
			$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode=str_replace('<%%COMBO(post_status)%%>', $combo_post_status->HTML, $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(post_status)%%>', $combo_post_status->SelectedData, $templateCode);

	// process foreign key links
	if($selected_id){
	}

	// process images
	$templateCode=str_replace('<%%UPLOADFILE(post_id)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(title)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(excerpt)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(post_status)%%>', '', $templateCode);

	// process values
	if($selected_id){
		$templateCode=str_replace('<%%VALUE(post_id)%%>', htmlspecialchars($row['post_id'], ENT_QUOTES), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(post_id)%%>', urlencode($urow['post_id']), $templateCode);
		$templateCode=str_replace('<%%VALUE(title)%%>', htmlspecialchars($row['title'], ENT_QUOTES), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(title)%%>', urlencode($urow['title']), $templateCode);
		if($dvprint){
			$templateCode = str_replace('<%%VALUE(excerpt)%%>', nl2br(htmlspecialchars($row['excerpt'], ENT_QUOTES)), $templateCode);
		}else{
			$templateCode = str_replace('<%%VALUE(excerpt)%%>', htmlspecialchars($row['excerpt'], ENT_QUOTES), $templateCode);
		}
		$templateCode=str_replace('<%%URLVALUE(excerpt)%%>', urlencode($urow['excerpt']), $templateCode);
		$templateCode=str_replace('<%%VALUE(post_status)%%>', htmlspecialchars($row['post_status'], ENT_QUOTES), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(post_status)%%>', urlencode($urow['post_status']), $templateCode);
	}else{
		$templateCode=str_replace('<%%VALUE(post_id)%%>', '0', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(post_id)%%>', urlencode('0'), $templateCode);
		$templateCode=str_replace('<%%VALUE(title)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(title)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(excerpt)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(excerpt)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(post_status)%%>', 'publish', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(post_status)%%>', urlencode('publish'), $templateCode);
	}

	// process translations
	foreach($Translation as $symbol=>$trans){
		$templateCode=str_replace("<%%TRANSLATION($symbol)%%>", $trans, $templateCode);
	}

	// clear scrap
	$templateCode=str_replace('<%%', '<!-- ', $templateCode);
	$templateCode=str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if($_POST['dvprint_x']==''){
		$templateCode.="\n\n<script>jQuery(function(){\n";
		$arrTables=getTableList();
		foreach($arrTables as $name => $caption){
			$templateCode .= "\tjQuery('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\tjQuery('#xs_{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\tjQuery('[id^=\"{$name}_plink\"]').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id){
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode.="<script>";
	$templateCode.="document.observe('dom:loaded', function() {";


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields

	// don't include blank images in lightbox gallery
	$templateCode=preg_replace('/blank.gif" rel="lightbox\[.*?\]"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	// hook: ss_view_product_description_dv
	if(function_exists('ss_view_product_description_dv')){
		$args=array();
		ss_view_product_description_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}
?>